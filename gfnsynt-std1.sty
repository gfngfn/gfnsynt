% ==== ==== STANDARD TERMS ==== ====
\newcommand\termsyntcolor{[rgb]{0.0,0.0,0.5}}
\newcommand\termmetacolor{[rgb]{0.5,0.0,0.5}}
\newcommand\termsynt[1]{\text{\expandafter\textcolor\gfnsynt@termsyntcolor{$#1$}}}
\newcommand\termmeta[1]{\text{\expandafter\textcolor\gfnsynt@termmetacolor{$#1$}}}
\newcommand\termletter[1]{\mathbf{#1}}
\newsyntax{-1}\termparen[1]{\mathopen{\termsynt{(}}#1\mathclose{\termsynt{)}}}
% ---- lambda abstraction without type annotation ----
\newsyntax{0}\termabs[2]{\termsynt{\mathbf{\lambda}}#1\termsynt{.}\ \syntaxarg{0}{\termparen}{#2}}
\newsyntax{0}\termabstyped[3]{\termsynt{\mathbf{\lambda}}#1\mathrel{\termsynt{:}}#2\termsynt{.}\ \syntaxarg{0}{\termparen}{#3}}
% ---- let/letrec-expression ----
\newsyntax{0}\termletin[4]{%
  \termsynt{\termletter{let}}\ #1 = \syntaxarg{0}{\termparen}{#3}\ \termsynt{\termletter{in}}\ \syntaxarg{0}{\termparen}{#4}}
\newsyntax{0}\termletrecin[4]{%
  \termsynt{\termletter{letrec}}\ #1 = \syntaxarg{0}{\termparen}{#3}\ \termsynt{\termletter{in}}\ \syntaxarg{0}{\termparen}{#4}}
% ---- if-then-else conditional ----
\newsyntax{0}\termifthenelse[3]{%
  \termsynt{\termletter{if}}\ \syntaxarg{0}{\termparen}{#1}\ \termsynt{\termletter{then}}\ \syntaxarg{0}{\termparen}{#2}%
                                                           \ \termsynt{\termletter{else}}\ \syntaxarg{0}{\termparen}{#3}}
% ---- application ----
\newsyntax{1}\termappseq[1]{\local@termappseq#1|\local@endofargument}
\def\local@termappseq#1|#2\local@endofargument{%
  \syntaxarg{1}{\termparen}{#1}\ifx\local@unique#2\local@unique\else\ \local@termappseqsub#2\local@endofargument\fi}
\def\local@termappseqsub#1|#2\local@endofargument{%
  \syntaxarg{2}{\termparen}{#1}\ifx\local@unique#2\local@unique\else\ \local@termappseqsub#2\local@endofargument\fi}
%
% ==== ==== STANDARD TYPES ==== ====
\newcommand\tysyntcolor{[rgb]{0.7,0.0,0.0}}
\newcommand\tymetacolor{[rgb]{0.7,0.4,0.0}}
\newcommand\tyletter[1]{\text{\texttt{#1}}}
\newcommand\tysynt[1]{\text{\expandafter\textcolor\gfnsynt@tysyntcolor{$#1$}}}
\newcommand\tymeta[1]{\text{\expandafter\textcolor\gfnsynt@tymetacolor{$#1$}}}
\newsyntax{-1}\typaren[1]{\mathopen{\tysynt{(}}#1\mathclose{\tysynt{)}}}
% ---- arrow type ----
\newsyntax{1}\tyarrow[2]{\syntaxarg{2}{\typaren}{#1}\mathbin{\tysynt{\rightarrow}}\syntaxarg{1}{\typaren}{#2}}
